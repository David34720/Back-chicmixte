-- Démarre une transaction
BEGIN;

-- Supprimer les tables existantes avec CASCADE pour gérer les dépendances
DROP TABLE IF EXISTS "users", "role", CASCADE;



CREATE TABLE IF NOT EXISTS "role" (
    "id" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    "name" TEXT NOT NULL
);

CREATE TABLE IF NOT EXISTS "users" (
    "id" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    "email" TEXT,
    "firstname" TEXT,
    "lastname" TEXT,
    "password" TEXT,
    "role_id" INTEGER NOT NULL DEFAULT 1 REFERENCES "role"("id") ON DELETE SET NULL,
    "admin" BOOLEAN,
    "level" INTEGER NOT NULL DEFAULT 1,
    "img" TEXT,
    "created_at" TIMESTAMPTZ NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updated_at" TIMESTAMPTZ
);

CREATE TABLE IF NOT EXISTS "permission" (
    "id" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    "name" TEXT
);

CREATE TABLE IF NOT EXISTS "permission_has_role" (
    "permission_id" INTEGER REFERENCES "permission"("id") ON DELETE CASCADE,
    "role_id" INTEGER REFERENCES "role"("id") ON DELETE CASCADE,
    PRIMARY KEY(permission_id, role_id)
);

INSERT INTO "role" ("name") VALUES ('user'), ('admin');

INSERT INTO
    "permission" (name)
VALUES
    ('assign_role'),
    ('play'),    
    ('all');

INSERT INTO "permission_has_role" (permission_id, role_id) VALUES (1, 2), (2, 1), (2, 2);



-- On persiste les changements en mettant fin à la transaction
COMMIT;
